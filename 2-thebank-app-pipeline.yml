# create a unique name based on your project requirements
name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

resources:
- repo: self

# global variables
variables:
  dockerRegistryServiceConnection: 'registry-conn'
  imageRepository: 'thebank'
  containerRegistry: 'acrdwe001.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'manifests'
        targetPath: 'manifests'
- stage: Release
  displayName: Release stage
  jobs:
    - deployment: DeployToAKS
      pool:
        vmImage: $(vmImageName)
      environment: prod
      strategy:
       runOnce:
         deploy:
           steps:
              - task: DownloadPipelineArtifact@1
                displayName: Download pipeline artifacts
                inputs:
                  artifactName: 'manifests'
                  downloadPath: '$(System.ArtifactsDirectory)/manifests'
              - task: Kubernetes@1
                displayName: Create Kubernetes NS
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'cluster-conn'
                  command: 'apply'
                  arguments: '-f $(System.ArtifactsDirectory)/manifests/thebank-ns.yml'
              - task: KubernetesManifest@0
                displayName: Deploy Kubernetes deployment manifest
                inputs:
                  action: 'deploy'
                  kubernetesServiceConnection: 'cluster-conn'
                  namespace: 'thebank'
                  manifests: '$(System.ArtifactsDirectory)/manifests/thebank.yml'
                  containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              - task: Kubernetes@1
                displayName: Deploy Kubernettes thebank Ingress manifest
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'cluster-conn'
                  command: 'apply'
                  arguments: '-f $(System.ArtifactsDirectory)/manifests/thebank-ingress.yml'